# 1- Download and install python 3
FROM python:3.13.2-slim-bullseye
# Setup linux os packages

# 2- Create virtual environment
# 3- Install dependencies
# 4- FastAPI Hello


# Set environment variables for Poetry
ENV POETRY_HOME="/opt/poetry"
ENV POETRY_VIRTUALENVS_IN_PROJECT=true
ENV PATH="$POETRY_HOME/bin:$PATH"

RUN python3 -m pip install --user pipx
RUN python3 -m pipx ensurepath

# Install Poetry
RUN pipx install poetry

# Set python related environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install os dependencies for our mini vm
RUN apt-get update && apt-get install -y \
    # for postgress
    libpq-dev \
    # for pillow
    libjpeg-dev \
    # for cairoSVG
    libcairo2 \
    # other
    gcc

# Create mini vm's code directory
RUN mkdir -p /code

# Set the working directory
WORKDIR /code


# Copy Poetry configuration files
COPY pyproject.toml poetry.lock ./

# copy the project code into the container's working directory'
COPY ./src /code


# Install project dependencies
RUN poetry config virtualenvs.create false \
 && poetry install --no-dev --no-root # --no-dev for production images

# make the bash script executable
COPY ./boot/docker_run_poetry.sh /opt/run.sh
RUN chmod +x /opt/run.sh

# Clean up apt cache to reduce image size
RUN apt-get remove --purge -y \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Run the FastAPI project via the runtime script
# when the container starts
CMD ["/opt/run.sh"]